apiVersion: v1
kind: ConfigMap
metadata:
  name: msvc-usuarios
#En los otros objetos se utilizao 'spec', pero aca se utiliza 'data'
data:
  #tod en minuscula porque no son variables de entorno, son solo configuraciones
  port: "8001"
  db_host: "mysql8:3306"
  database: msvc_usuarios
  ##username: root
  ##password: mysqldb
  curso_url: msvc-cursos:8002
  #aca indicamos que utilizaremos application.yaml en vez del .properties. "|-", permite indicar
  # que lo que trabajares sera un archivo y nos ubicara en la raiz del archivo y ya ahi podemos
  # tener configuraciones del application.properties, sobreescribir configuraciones del proyecto de spring boot.
  # "texto: ..", sera un configuracion que podriamos utilizar en nuestro proyecto de spring boot, si que
  # lo tengamos en application.properties del proyecto
  application.yaml: |-
    config:
      texto: Configurando ambiente por defecto
    #Separamos en otro archivo de configuracion. El de arriba seria uno como por default
    ---
    spring:
      config:
        activate:
          on-profile: dev
    config:
      texto: Configurando ambiente de desarrollo
    ---
    spring:
      config:
        activate:
          on-profile: pro
    config:
      texto: Configurando ambiente de producci√≥n
---
#Agregando configuraciones relacionado a otro objeto
apiVersion: v1
kind: ConfigMap
metadata:
  name: msvc-cursos
data:
  port: "8002"
  db_host: "postgres14:5432"
  database: msvc_cursos
  #Comentamos porque ya se estaria definiendo esos valores en el objeto secret.yaml
  ##username: postgres
  ##password: pgdb
  usuario_url: msvc-usuarios:8001
