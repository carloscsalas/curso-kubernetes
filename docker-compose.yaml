version: "3.9"
services:
  mysql8:
    container_name: mysql8
    #esta imagen si no la tenemos creada en nuestra maquina, lo puede bajar automaticamente de docker-up. Al igual que postgres
    image: mysql:8
    ports:
      - "3307:3306"
    environment:
      #MYSQL_ROOT_PASSWORD: mysqldb
      #MYSQL_DATABASE: msvc_usuarios
      - MYSQL_ROOT_PASSWORD=mysqldb
      - MYSQL_DATABASE=msvc_usuarios
    volumes:
      - data-mysql:/var/lib/mysql
    restart: always
    networks:
      - spring

  postgres14:
    container_name: postgres14
    image: postgres:14-alpine
    ports:
      - "5532:5432"
    environment:
      POSTGRES_PASSWORD: pgdb
      POSTGRES_DB: msvc_cursos
    volumes:
      - data-postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - spring

  msvc-usuarios:
    container_name: msvc-usuarios
    image: gfernandez16/usuarios:latest
    #En ves de utilizar la imagen, que pueda  que no exista, se podria contruir la imagen con build al levantar con up
    #image: usuarios:latest
#    build:
#      #context, seria el "." cuando se hace docker build ., que seria el lugar de partida o raiz
#      context: ./
#      dockerfile: ./msvc-usuarios/Dockerfile
    ports:
      - "8001:8001"
    env_file: ./msvc-usuarios/.env
    networks:
      - spring
    depends_on:
      - mysql8
    #un restart, si cuando inicie este contenedor aun no esta totalmente levantado el contenedor del mysql
    restart: always

  msvc-cursos:
    #si no se pone este atributo, el nombre del contenedor es por defecto(curso-kubernetes_data-postgres)
    container_name: msvc-cursos
    image: gfernandez16/cursos:latest
#    build:
#      context: ./
#      dockerfile: ./msvc-cursos/Dockerfile
    ports:
      - "8002:8002"
    env_file:
      - ./msvc-cursos/.env
    networks:
      - spring
    depends_on:
      - postgres14
      - msvc-usuarios
    restart: always

volumes:
  data-mysql:
    #si no colocamos ningun atributo al data-mysql, va crear un nombre de volume por defecto(curso-kubernetes_data-mysql)
    name: data-mysql
  data-postgres:
    name: data-postgres

networks:
  spring:
    name: spring